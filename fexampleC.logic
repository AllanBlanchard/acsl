\flit FLIT_inc;
int x;
assume forall int k; \requires{L}(FLIT_inc,k) == \true;
assume forall int k; \assigns{L}(FLIT_inc,k) == { x };
assume forall int k;
  \ensures{LPre,LPost}(FLIT_inc,k) == (x@LPost == x@LPre + k);
Pre:
\flit fp;
assume fp == FLIT_inc;
Lab_0:
assert \requires{Here}(FLIT_inc,2);
assert \assigns{Here}(FLIT_inc,2) <:= \everything;
havoc \assigns{Here}(FLIT_inc,2);
assume \ensures{Lab_0,Here}(FLIT_inc,2);
Lab_1:
assert \requires{Here}(FLIT_inc,-);
assert \assigns{Here}(FLIT_inc,-1) <:= \everything;
havoc \assigns{Here}(FLIT_inc,-1);
assume \ensures{Lab_1,Here}(FLIT_inc,-1);
assert \at(x,Here) ==\at(x,Pre) + 1;
